buildscript {
	ext {
		springBootVersion = '3.0.1'
		snippetsDir = file("${rootDir.path}/build/generated-snippets")
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

allprojects {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group = 'com.example'

	repositories {
		mavenCentral()
		maven { url 'https://repo.spring.io/milestone' }
	}
}

subprojects { project ->
    apply plugin: 'java'

    test {
        outputs.dir snippetsDir
        useJUnitPlatform()
    }

    if (project.path.startsWith(":growing-shop-api:")) {
        dependencies {
            implementation 'com.google.guava:guava:31.0.1-jre'
            implementation 'org.springframework.boot:spring-boot-starter-security'
            implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

            runtimeOnly 'com.h2database:h2'

            testImplementation 'org.springframework.boot:spring-boot-starter-test'
            testImplementation 'io.rest-assured:rest-assured'
            testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
            testImplementation 'org.mockito:mockito-inline'
        }

        dependencyManagement {
            imports {
                mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            }
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }
}
